{"ast":null,"code":"var _jsxFileName = \"/home/gregory/Desktop/greggit/amfam/src/MemoryGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardRow from \"./CardRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemoryGame = () => {\n  _s();\n\n  const [gameover, setGameover] = useState(false);\n  const [firstEmoji, setFirstEmoji] = useState();\n  const [secondEmoji, setSecondEmoji] = useState();\n  const [boardSize, setBoardSize] = useState(8);\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  const emojiList = ['ðŸ˜€', 'ðŸ˜‚', 'ðŸ¥°', 'ðŸ˜˜', 'ðŸ¤ª', 'ðŸ¤“', 'ðŸ¤©', 'ðŸ¥³'];\n\n  const compareCardEmoji = () => {};\n\n  const makeBoard = () => {};\n\n  return /*#__PURE__*/_jsxDEV(CardRow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemoryGame, \"JkqSwUNky5tdd+khvGD2Ig8dSNw=\");\n\n_c = MemoryGame;\nexport default MemoryGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"sources":["/home/gregory/Desktop/greggit/amfam/src/MemoryGame.js"],"names":["React","useState","useEffect","CardRow","MemoryGame","gameover","setGameover","firstEmoji","setFirstEmoji","secondEmoji","setSecondEmoji","boardSize","setBoardSize","shuffleArray","array","i","length","j","Math","floor","random","emojiList","compareCardEmoji","makeBoard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;;AAEA,WAASY,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,OAACD,KAAK,CAACC,CAAD,CAAN,EAAWD,KAAK,CAACG,CAAD,CAAhB,IAAuB,CAACH,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAAvB;AACH;AACJ;;AAGC,QAAMM,SAAS,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,CAAlB;;AAGA,QAAMC,gBAAgB,GAAG,MAAM,CAE9B,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAKA,sBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CA9BD;;GAAMnB,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardRow from \"./CardRow\";\n\n\nconst MemoryGame = () => {\n  const [gameover, setGameover] = useState(false);\n  const [firstEmoji, setFirstEmoji] = useState();\n  const [secondEmoji, setSecondEmoji] = useState();\n  const [boardSize, setBoardSize] = useState(8);\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\n\n  const emojiList = ['ðŸ˜€','ðŸ˜‚','ðŸ¥°','ðŸ˜˜','ðŸ¤ª','ðŸ¤“','ðŸ¤©','ðŸ¥³'];\n\n  \n  const compareCardEmoji = () => {\n\n  };\n\n  const makeBoard = () => {\n\n  };\n\n\n  return (\n    <CardRow/>\n\n  )\n};\n\nexport default MemoryGame;"]},"metadata":{},"sourceType":"module"}