{"ast":null,"code":"var _jsxFileName = \"/home/gregory/Desktop/greggit/amfam/src/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = props => {\n  _s();\n\n  const {\n    decreaseTime\n  } = props;\n  let intervalRef = useRef();\n  useEffect(() => {\n    setPause(false);\n    intervalRef.current = setInterval(decreaseNum, 1000);\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  const handleClick = () => {\n    if (!pause) {\n      clearInterval(intervalRef.current);\n    } else {\n      intervalRef.current = setInterval(decreaseNum, 1000);\n    }\n\n    setPause(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: num\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: pause ? \"Run\" : \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countdown, \"AcQ1i4tD0owQ+S+iAErNNAWnC24=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/gregory/Desktop/greggit/amfam/src/Countdown.js"],"names":["React","useRef","useEffect","useState","Countdown","props","decreaseTime","intervalRef","setPause","current","setInterval","decreaseNum","clearInterval","handleClick","pause","prev","num"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AAEA,MAAIE,WAAW,GAAGN,MAAM,EAAxB;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAD,IAAAA,WAAW,CAACE,OAAZ,GAAsBC,WAAW,CAACC,WAAD,EAAc,IAAd,CAAjC;AAEA,WAAO,MAAMC,aAAa,CAACL,WAAW,CAACE,OAAb,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAI,CAACC,KAAL,EAAY;AACVF,MAAAA,aAAa,CAACL,WAAW,CAACE,OAAb,CAAb;AACD,KAFD,MAEO;AACLF,MAAAA,WAAW,CAACE,OAAZ,GAAsBC,WAAW,CAACC,WAAD,EAAc,IAAd,CAAjC;AACD;;AACDH,IAAAA,QAAQ,CAAEO,IAAD,IAAU,CAACA,IAAZ,CAAR;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,WAAjB;AAAA,gBAA+BC,KAAK,GAAG,KAAH,GAAW;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;GAAMV,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst Countdown = (props) => {\n  const { decreaseTime } = props;\n\n  let intervalRef = useRef();\n\n\n  useEffect(() => {\n    setPause(false);\n    intervalRef.current = setInterval(decreaseNum, 1000);\n\n    return () => clearInterval(intervalRef.current);\n  }, []);\n  \n  const handleClick = () => {\n    if (!pause) {\n      clearInterval(intervalRef.current);\n    } else {\n      intervalRef.current = setInterval(decreaseNum, 1000);\n    }\n    setPause((prev) => !prev);\n  };\n  \n  return (\n    <div>\n      <div>{num}</div>\n      <button onClick={handleClick}>{pause ? \"Run\" : \"Pause\"}</button>\n    </div>\n  );\n};\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}