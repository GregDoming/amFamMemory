{"ast":null,"code":"var _jsxFileName = \"/home/gregory/Desktop/greggit/amfam/src/Card.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport tick from \"./Tick.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  const {\n    emoji,\n    flipped,\n    matched,\n    handleCardClick,\n    column,\n    row\n  } = props;\n  let cardChoice;\n\n  if (matched) {\n    cardChoice = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardFront\",\n      onClick: () => handleCardClick(row, column),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"checkImg\",\n        src: tick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } else if (!flipped) {\n    cardChoice = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => handleCardClick(row, column)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }, this);\n  } else if (flipped) {\n    cardChoice = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardFront\",\n      onClick: () => handleCardClick(row, column),\n      children: emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cardChoice\n  }, void 0, false);\n};\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/gregory/Desktop/greggit/amfam/src/Card.js"],"names":["React","useState","useEffect","Card","props","emoji","flipped","matched","handleCardClick","column","row","cardChoice","tick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;;;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,eAA3B;AAA4CC,IAAAA,MAA5C;AAAoDC,IAAAA;AAApD,MAA4DN,KAAlE;AACA,MAAIO,UAAJ;;AAEA,MAAIJ,OAAJ,EAAa;AACXI,IAAAA,UAAU,gBACR;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,MAAMH,eAAe,CAACE,GAAD,EAAMD,MAAN,CAAzD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAOO,IAAI,CAACN,OAAL,EAAc;AACnBK,IAAAA,UAAU,gBAAG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAE,MAAMH,eAAe,CAACE,GAAD,EAAMD,MAAN;AAApD;AAAA;AAAA;AAAA;AAAA,YAAb;AACD,GAFM,MAEA,IAAIH,OAAJ,EAAa;AAClBK,IAAAA,UAAU,gBACR;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,MAAMH,eAAe,CAACE,GAAD,EAAMD,MAAN,CAAzD;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBAAO;AAAA,cAAGM;AAAH,mBAAP;AACD,CAtBD;;KAAMR,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport tick from \"./Tick.svg\";\n\nconst Card = (props) => {\n  const { emoji, flipped, matched, handleCardClick, column, row } = props;\n  let cardChoice;\n\n  if (matched) {\n    cardChoice = (\n      <div className=\"cardFront\" onClick={() => handleCardClick(row, column)}>\n        <img className=\"checkImg\" src={tick} />\n        <p></p>\n      </div>\n    );\n  } else if (!flipped) {\n    cardChoice = <div className=\"card\" onClick={() => handleCardClick(row, column)}></div>;\n  } else if (flipped) {\n    cardChoice = (\n      <div className=\"cardFront\" onClick={() => handleCardClick(row, column)}>\n        {emoji}\n      </div>\n    );\n  }\n\n  return <>{cardChoice}</>;\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}