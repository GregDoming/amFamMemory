{"ast":null,"code":"var _jsxFileName = \"/home/gregory/Desktop/greggit/amfam/src/Card.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  const {\n    emoji,\n    flipped,\n    matched,\n    handleCardClick,\n    column,\n    row\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !flipped ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => handleCardClick(row, column)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardFront\",\n      onClick: () => handleCardClick(row, column),\n      children: emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/gregory/Desktop/greggit/amfam/src/Card.js"],"names":["React","useState","useEffect","Card","props","emoji","flipped","matched","handleCardClick","column","row"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;;;;AAGA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,eAA3B;AAA4CC,IAAAA,MAA5C;AAAoDC,IAAAA;AAApD,MAA4DN,KAAlE;AAEF,sBACE;AAAA,cACC,CAACE,OAAD,gBAEG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAE,MAAME,eAAe,CAACE,GAAD,EAAMD,MAAN;AAApD;AAAA;AAAA;AAAA;AAAA,YAFH,gBAIG;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,MAAMD,eAAe,CAACE,GAAD,EAAMD,MAAN,CAAzD;AAAA,gBAAyEJ;AAAzE;AAAA;AAAA;AAAA;AAAA;AALJ,mBADF;AAUC,CAbD;;KAAMF,I;AAeN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Card.css';\n\n\nconst Card = props => {\n  const { emoji, flipped, matched, handleCardClick, column, row } = props\n\nreturn (\n  <>\n  {!flipped \n    ? (\n      <div className=\"card\" onClick={() => handleCardClick(row, column)}></div>\n    ) : (\n      <div className=\"cardFront\" onClick={() => handleCardClick(row, column)}>{emoji}</div>\n    )}\n  </>\n  )\n};\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}